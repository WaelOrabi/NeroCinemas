@model IEnumerable<Nero.Models.Order>

@{
    Layout = "_MyLayout";

}

<div class="container mt-5">
    @if (User.IsInRole("Customar"))
    {
        <h2 class="mb-4">My Orders</h2>
    }
    else
    {
        
    <h2 class="mb-4">Manage Orders</h2>
    }
    @if (TempData["success?"] != null)
    {
        <div id="alert" class="alert alert-success">@TempData["success?"]</div>
    }
    @if (User.IsInRole("Admin"))
    {

        <div class="dropdown mb-3">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                Filter by Status
            </button>
            <ul class="dropdown-menu" aria-labelledby="filterDropdown">
                <li><a class="dropdown-item" asp-route-status="">All</a></li>
                <li><a class="dropdown-item" asp-route-status="1" asp-route-paystatus="@Nero.CheckValidation.CheckValidation.StaticDataInProcessPayment">IN Process</a></li>

                <li><a class="dropdown-item" asp-route-status="1" asp-route-paystatus="@Nero.CheckValidation.CheckValidation.StaticDataSuccessPayment">Confirmed Via Admin</a></li>
                <li><a class="dropdown-item" asp-route-status="0">Bending</a></li>

            </ul>
        </div>
    }

    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>Order ID</th>
                    <th>User</th>
                    <th>Order Date</th>
                    <th>Status</th>

                    <th>Payment Status</th>

                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>@order.Id</td>
                        <td>@order.AppUser.UserName</td>
                        <td>@order.CreatedAt.ToString()</td>
                        <td>
                            @if (order.Status == 0)
                            {
                                <span class="badge badge-warning">Pending</span>
                            }
                            else if (order.Status == 1)
                            {
                                <span class="badge badge-success">Confirmed</span>
                            }
                        </td>


                        <td>@order.PaymentStatus</td>

                        <td>@order.OrderItems.Sum(e => e.TotalPrice)</td>
                        <td>
                            @if (User.IsInRole("Customar"))
                            {
                                @if (order.UpdatedAt.HasValue && DateTime.Now <= order.UpdatedAt.Value.AddHours(2))
                                {
                                    if (order.PaymentStatus!=Nero.CheckValidation.CheckValidation.StaticDataSuccessPayment)
                                    {
                                        if (order.PaymentStatus!=Nero.CheckValidation.CheckValidation.StaticDataRefundedPayment)
                                        {
                                            
                                        <a asp-action="RejectOrder" asp-controller="checkout" asp-route-id="@order.Id" class="btn btn-sm btn-danger">Cancel Order</a>

                                        }
                                           @*  <a onclick="deleteIt(@order.Id,'Order')" class="btn btn-sm btn-danger">Remove Order</a> *@
                                    }else{
                                        <span class="text-muted">Sorry,Too Late To Cancel</span>
                                    }
                                }else if (order.UpdatedAt == null)
                                {
                                    <a asp-action="Index" asp-controller="ShoppingCart" asp-route-id="@order.Id" class="btn btn-sm btn-primary">Complete Order</a>
                                    <a  onclick="deleteIt(@order.Id,'Order')" class="btn btn-sm btn-danger">Remove Order</a>

                                }
                                else
                                {

                                    <span class="text-muted">No actions available</span>
                                }

                            }
                            else
                            {
                                if (order.PaymentStatus == Nero.CheckValidation.CheckValidation.StaticDataInProcessPayment)
                                {

                                    <a asp-action="ConfirmOrder" asp-controller="checkout" asp-route-id="@order.Id" class="btn btn-sm btn-success">Confirm</a>
                                    <a asp-action="RejectOrder" asp-controller="checkout" asp-route-id="@order.Id" class="btn btn-sm btn-danger">Reject</a>

                                }else{
                                    <span class="text-muted">No actions available</span>
                                }

                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<style>
    table td, th {
        color: #ccc;
    }

    .badge-warning {
        background-color: #ffc107;
        color: #000;
    }

    .badge-success {
        background-color: #28a745;
        color: #fff;
    }

    .btn-success {
        background-color: #28a745;
        color: #fff;
    }

    .btn-danger {
        background-color: #dc3545;
        color: #fff;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                $("#alert").fadeOut("slow");
            }, 6000);
        });
    </script>
}
